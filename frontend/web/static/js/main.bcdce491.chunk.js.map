{"version":3,"sources":["components/Partner/index.module.scss","components/Form/index.tsx","components/Partner/index.tsx","components/Loading/index.tsx","App.tsx","index.tsx","app.module.scss","components/Form/index.module.scss","components/Loading/index.module.scss"],"names":["module","exports","Form","title","form","address","getFieldDecorator","getFieldValue","getFieldError","resetFields","useState","current","setCurrent","useEffect","search","qs","parse","window","location","slice","get","Card","style","marginBottom","CardHeader","CardContent","initialValue","rules","required","message","validator","rule","value","callback","length","validateTrigger","error","helperText","variant","size","fullWidth","label","FormControl","trigger","RadioGroup","name","row","onChange","FormControlLabel","control","Radio","color","classes","labelPlacementStart","cs","labelPlacement","pattern","validateFirst","FormHelperText","InputLabel","id","backgroundColor","Select","labelId","map","item","MenuItem","key","type","FormLabel","component","Partner","index","onDelete","action","IconButton","onClick","fontSize","memo","show","text","className","s","mask","LinearProgress","loading","CircularProgress","info","createForm","partners","setPartners","validateFields","setLoading","setAddress","setTimeout","handleRemove","ind","findIndex","i","temp","splice","header","tip","main","Button","prev","concat","payload","keys","Object","forEach","indexOf","split","push","phone","console","log","ReactDOM","render","document","getElementById"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,MAAQ,yB,qVCoZXC,EA9Xa,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAEpCC,EAIAF,EAJAE,kBACAC,EAGAH,EAHAG,cACAC,EAEAJ,EAFAI,cACAC,EACAL,EADAK,YALkD,EAOxBC,mBAAS,IAPe,mBAO/CC,EAP+C,KAOtCC,EAPsC,KAQtDC,qBAAU,WACN,IAAMC,EAASC,IAAGC,MAAMC,OAAOC,SAASJ,OAAOK,MAAM,IACrDP,EAAWE,EAAOM,OACnB,IAsBH,OACI,kBAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,aAAc,KACzB,kBAACC,EAAA,EAAD,CAAYrB,MAAOA,GAAS,6BAC5B,kBAACsB,EAAA,EAAD,KACKnB,EAAkB,OAAQ,CACvBoB,aAAc,GACdC,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,8CAEb,CACIC,UADJ,SACcC,EAAMC,EAAeC,GAC3B,GAAID,EAAME,QAAU,EAChB,OAAOD,IAEXA,EAAS,8DAIrBE,gBAAiB,UAhBpB7B,CAkBG,uBACI8B,QAAS5B,EAAc,QACvB6B,WAAY7B,EAAc,QAC1B8B,QAAS,WACTC,KAAM,QACNC,WAAS,EACTC,MAAM,wEAId,kBAACC,EAAA,EAAD,CAAaF,WAAS,EAACD,KAAM,SACxBjC,EAAkB,OAAQ,CACvBoB,aAAc,IACdiB,QAAS,YAFZrC,CAIG,kBAACsC,EAAA,EAAD,CACIC,KAAK,WACLC,KAAG,EACHC,SAAU,WACNtC,EAAY,CAAC,kBAGjB,kBAACuC,EAAA,EAAD,CACIhB,MAAM,IACNiB,QACI,kBAACC,EAAA,EAAD,CAAOX,KAAM,QAASY,MAAM,YAEhCC,QAAS,CACLC,oBAAqBC,IAAGb,OAE5BA,MAAM,qBACNc,eAAe,UAEnB,kBAACP,EAAA,EAAD,CACIhB,MAAM,IACNiB,QACI,kBAACC,EAAA,EAAD,CAAOX,KAAM,QAASY,MAAM,YAEhCV,MAAM,eACNc,eAAe,aAK9BjD,EAAkB,cAAe,CAC9BoB,aAAc,GACdC,MAxFkB,MAA1BpB,EAAc,QACP,CACH,CACIqB,UAAU,EACVC,QAAS,oDAGb,CACI2B,QAAS,6FACT3B,QAAS,2DAId,CACH,CACID,UAAU,EACVC,QAAS,iGAyELM,gBAAiB,UAHpB7B,CAKG,uBACI8B,QAAS5B,EAAc,eACvB6B,WAAY7B,EAAc,eAC1B8B,QAAS,WACTC,KAAM,QACNC,WAAS,EACTC,MAC8B,MAA1BlC,EAAc,QACR,iEACA,wGAIlB,kBAACmC,EAAA,EAAD,CACIF,WAAS,EACTD,KAAM,QACNH,QAAS5B,EAAc,SAEtBF,EAAkB,OAAQ,CACvBoB,aAAc,GACdiB,QAAS,WACThB,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,+CAGjB4B,eAAe,GATlBnD,CAWG,kBAACsC,EAAA,EAAD,CAAYE,KAAG,GACX,kBAACE,EAAA,EAAD,CACIhB,MAAM,IACNiB,QACI,kBAACC,EAAA,EAAD,CAAOX,KAAM,QAASY,MAAM,YAEhCC,QAAS,CACLC,oBAAqBC,IAAGb,OAE5BA,MAAM,eACNc,eAAe,UAEnB,kBAACP,EAAA,EAAD,CACIhB,MAAM,IACNiB,QACI,kBAACC,EAAA,EAAD,CAAOX,KAAM,QAASY,MAAM,YAEhCV,MAAM,eACNc,eAAe,YAI3B,kBAACG,EAAA,EAAD,KAAiBlD,EAAc,UAEnC,kBAACkC,EAAA,EAAD,CACIH,KAAM,QACNC,WAAS,EACTJ,QAAS5B,EAAc,YAEvB,kBAACmD,EAAA,EAAD,CACIC,GAAG,UACHtB,QAAS,WACThB,MAAO,CAAEuC,gBAAiB,SAH9B,wCAOCvD,EAAkB,UAAW,CAC1BoB,aAAcf,GAAW,GACzBgB,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,2DAGjBM,gBAAiB,YARpB7B,CAUG,kBAACwD,EAAA,EAAD,CAAQC,QAAQ,UAAUzB,QAAS,YAC9BjC,EAAQ2D,KAAI,SAAAC,GAAI,OACb,kBAACC,EAAA,EAAD,CAAUlC,MAAO,GAAKiC,EAAKL,GAAIO,IAAKF,EAAKL,IACpCK,EAAKxB,YAKtB,kBAACiB,EAAA,EAAD,KACKlD,EAAc,aAGtBF,EAAkB,OAAQ,CACvBoB,aAAc,GACdC,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,iEAGjBM,gBAAiB,UARpB7B,CAUG,uBACI8B,QAAS5B,EAAc,QACvB6B,WAAY7B,EAAc,QAC1B8B,QAAS,WACTC,KAAM,QACNC,WAAS,EACTC,MAAO,wEAGdnC,EAAkB,QAAS,CACxBoB,aAAc,GACdC,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,wCAEb,CACI2B,QAAS,uBACT3B,QAAS,uEAGjBM,gBAAiB,UAZpB7B,CAcG,uBACI8D,KAAM,MACNhC,QAAS5B,EAAc,SACvB6B,WAAY7B,EAAc,SAC1B8B,QAAS,WACTC,KAAM,QACNC,WAAS,EACTC,MAAO,gDAGf,kBAACC,EAAA,EAAD,CACIH,KAAM,QACNC,WAAS,EACTJ,QAAS5B,EAAc,cAEvB,kBAACmD,EAAA,EAAD,CACIC,GAAG,YACHtB,QAAS,WACThB,MAAO,CAAEuC,gBAAiB,SAH9B,oDAOCvD,EAAkB,YAAa,CAC5BoB,aAAc,GACdC,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,+CAGjBM,gBAAiB,YARpB7B,CAUG,kBAACwD,EAAA,EAAD,CAAQC,QAAQ,YAAYzB,QAAS,YACjC,kBAAC4B,EAAA,EAAD,CAAUlC,MAAM,KAAhB,gBACA,kBAACkC,EAAA,EAAD,CAAUlC,MAAM,KAAhB,kBAGR,kBAAC0B,EAAA,EAAD,KACKlD,EAAc,eAGS,MAA/BD,EAAc,cACXD,EAAkB,mBAAoB,CAClCoB,aAAc,GACdC,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,yCAGjBM,gBAAiB,UARrB7B,CAUI,uBACI8B,QAAS5B,EAAc,oBACvB6B,WAAY7B,EAAc,oBAC1B8B,QAAS,WACTC,KAAM,QACNC,WAAS,EACTC,MAAO,kEAGnB,kBAACC,EAAA,EAAD,CACIH,KAAM,QACNC,WAAS,EACTJ,QAAS5B,EAAc,WAEvB,kBAACmD,EAAA,EAAD,CACIC,GAAG,SACHtB,QAAS,WACThB,MAAO,CAAEuC,gBAAiB,SAH9B,oDAOCvD,EAAkB,SAAU,CACzBoB,aAAc,GACdC,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,+CAGjBM,gBAAiB,YARpB7B,CAUG,kBAACwD,EAAA,EAAD,CAAQC,QAAQ,SAASzB,QAAS,YAC9B,kBAAC4B,EAAA,EAAD,CAAUlC,MAAM,KAAhB,gBACA,kBAACkC,EAAA,EAAD,CAAUlC,MAAM,KAAhB,gBACA,kBAACkC,EAAA,EAAD,CAAUlC,MAAM,KAAhB,kBAGR,kBAAC0B,EAAA,EAAD,KAAiBlD,EAAc,YAEN,MAA5BD,EAAc,WACXD,EAAkB,gBAAiB,CAC/BoB,aAAc,IADlBpB,CAGI,uBACI8B,QAAS5B,EAAc,iBACvB6B,WAAY7B,EAAc,iBAC1B8B,QAAS,WACTC,KAAM,QACNC,WAAS,EACTC,MAAO,gDAGnB,kBAACC,EAAA,EAAD,CACIF,WAAS,EACTD,KAAM,QACNH,QAAS5B,EAAc,WAEvB,kBAAC6D,EAAA,EAAD,CAAWC,UAAU,UAArB,wCACChE,EAAkB,SAAU,CACzBoB,aAAc,GACdiB,QAAS,WACThB,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,8CAEb,CACIC,UADJ,SACcC,EAAMC,EAAOC,GACnB,GAAc,MAAVD,EACA,OAAOC,IAEXA,EAAS,6DAIrBwB,eAAe,GAjBlBnD,CAmBG,kBAACsC,EAAA,EAAD,CAAYE,KAAG,GACX,kBAACE,EAAA,EAAD,CACIhB,MAAM,IACNiB,QACI,kBAACC,EAAA,EAAD,CAAOX,KAAM,QAASY,MAAM,YAEhCC,QAAS,CACLC,oBAAqBC,IAAGb,OAE5BA,MAAM,eACNc,eAAe,UAEnB,kBAACP,EAAA,EAAD,CACIhB,MAAM,IACNiB,QACI,kBAACC,EAAA,EAAD,CAAOX,KAAM,QAASY,MAAM,YAEhCV,MAAM,eACNc,eAAe,YAI3B,kBAACG,EAAA,EAAD,KAAiBlD,EAAc,e,sDCjQpC+D,EAvHgB,SAAC,GAAsC,IAApCpE,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,KAAMoE,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC1CnE,EAAqCF,EAArCE,kBAAmBE,EAAkBJ,EAAlBI,cAC3B,OACI,kBAACa,EAAA,EAAD,CAAMC,MAAO,CAAEC,aAAc,KACzB,kBAACC,EAAA,EAAD,CACIrB,MAAOA,GAAS,2BAChBuE,OACI,kBAACC,EAAA,EAAD,CAAYpC,KAAM,QAASqC,QAAS,kBAAMH,EAASD,KAC/C,kBAAC,IAAD,CAAYK,SAAU,aAIlC,kBAACpD,EAAA,EAAD,KACKnB,EAAkB,QAAD,OAASkE,GAAS,CAChC9C,aAAc,GACdC,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,8CAEb,CACIC,UADJ,SACcC,EAAMC,EAAeC,GAC3B,GAAID,EAAME,QAAU,EAChB,OAAOD,IAEXA,EAAS,8DAIrBE,gBAAiB,UAhBpB7B,CAkBG,uBACI8B,QAAS5B,EAAc,QAAD,OAASgE,IAC/BnC,WAAY7B,EAAc,QAAD,OAASgE,IAClClC,QAAS,WACTC,KAAM,QACNC,WAAS,EACTC,MAAM,wEAGbnC,EAAkB,SAAD,OAAUkE,GAAS,CACjC9C,aAAc,GACdC,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,wCAEb,CACI2B,QAAS,uBACT3B,QAAS,uEAGjBM,gBAAiB,UAZpB7B,CAcG,uBACI8D,KAAM,MACNhC,QAAS5B,EAAc,SAAD,OAAUgE,IAChCnC,WAAY7B,EAAc,SAAD,OAAUgE,IACnClC,QAAS,WACTC,KAAM,QACNC,WAAS,EACTC,MAAO,gDAGf,kBAACC,EAAA,EAAD,CACIF,WAAS,EACTD,KAAM,QACNH,QAAS5B,EAAc,UAAD,OAAWgE,KAEjC,kBAACH,EAAA,EAAD,CAAWC,UAAU,UAArB,wCACChE,EAAkB,UAAD,OAAWkE,GAAS,CAClC9C,aAAc,GACdiB,QAAS,WACThB,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,8CAEb,CACIC,UADJ,SACcC,EAAMC,EAAOC,GACnB,GAAc,MAAVD,EACA,OAAOC,IAEXA,EAAS,8DAbxB3B,CAkBG,kBAACsC,EAAA,EAAD,CAAYE,KAAG,GACX,kBAACE,EAAA,EAAD,CACIhB,MAAM,IACNiB,QACI,kBAACC,EAAA,EAAD,CAAOX,KAAM,QAASY,MAAM,YAEhCC,QAAS,CACLC,oBAAqBC,IAAGb,OAE5BA,MAAM,eACNc,eAAe,UAEnB,kBAACP,EAAA,EAAD,CACIhB,MAAM,IACNiB,QACI,kBAACC,EAAA,EAAD,CAAOX,KAAM,QAASY,MAAM,YAEhCV,MAAM,eACNc,eAAe,YAI3B,kBAACG,EAAA,EAAD,KACKlD,EAAc,UAAD,OAAWgE,S,4CC9GlCM,kBAZa,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACjC,OAAOD,EACH,yBAAKE,UAAWC,IAAEC,MACd,kBAACC,EAAA,EAAD,MACA,yBAAKH,UAAWC,IAAEG,SACd,kBAACC,EAAA,EAAD,MACCN,GAAQ,uBAAGC,UAAWC,IAAEK,MAAOP,KAGxC,QCoFOQ,iBA9FqB,SAAC,GAAc,IAAZpF,EAAW,EAAXA,KAAW,EACdM,mBAAmB,IADL,mBACvC+E,EADuC,KAC7BC,EAD6B,KAEtCC,EAAmBvF,EAAnBuF,eAFsC,EAGhBjF,oBAAS,GAHO,mBAGvC2E,EAHuC,KAG9BO,EAH8B,OAIhBlF,mBAA0C,IAJ1B,mBAIvCL,EAJuC,KAI9BwF,EAJ8B,KAQ9ChF,qBAAU,WACNiF,YAAW,WACPD,EAAW,CACP,CACIjC,GAAI,GACJnB,MAAO,oBAGhB,OACJ,IACH,IAAMsD,EAAe,SAACvB,GAClB,IAAMwB,EAAMP,EAASQ,WAAU,SAAAC,GAAC,OAAIA,IAAM1B,KACpC2B,EAAOV,EAAStE,QACtBgF,EAAKC,OAAOJ,EAAK,GACjBN,EAAYS,IA2BhB,OACI,oCACI,kBAAC,EAAD,CAASpB,KAAMM,IACf,4BACA,4BAAQJ,UAAW3B,IAAG+C,QAClB,gFACA,yBAAKpB,UAAW3B,IAAGgD,KACf,kBAAC,IAAD,CAAyBnD,MAAO,cAChC,0BAAM8B,UAAW3B,IAAGiC,MAApB,sPAKR,0BAAMN,UAAW3B,IAAGiD,MAChB,kBAAC,EAAD,CAAMpG,MAAO,2BAAQC,KAAMA,EAAMC,QAASA,IACzCoF,EAASzB,KAAI,SAAAC,GAAI,OACd,kBAAC,EAAD,CACI7D,KAAMA,EACN+D,IAAKF,EACLO,MAAOP,EACPQ,SAAUsB,OAGlB,kBAACS,EAAA,EAAD,CACIlE,QAAS,YACTa,MAAO,UACPX,WAAS,EACToC,QAvEE,WACdc,GAAY,SAAAe,GAAI,OAAIA,EAAKC,OAAOD,EAAKA,EAAKvE,OAAS,GAAK,GAAK,OAuEjDZ,MAAO,CAAEC,aAAc,IAL3B,wCASA,kBAACiF,EAAA,EAAD,CACIlE,QAAS,YACTa,MAAO,YACPX,WAAS,EACToC,QA7DK,WACjBe,GAAe,SAACvD,EAAOuE,GACnB,IAAKvE,EAAO,CACR,IAAMwE,EAAOC,OAAOD,KAAKD,GACrBlB,EAAkB,GAUtB,IAAK,IAAItB,KATTyC,EAAKE,SAAQ,SAAA7C,GACT,GAAIA,EAAK8C,QAAQ,UAAY,EAAG,CAC5B,IAAMvC,GAASP,EAAK+C,MAAM,KAAK,GAC/BvB,EAASwB,KAAK,CACVpE,KAAM8D,EAAQ1C,GACdiD,MAAOP,EAAQ,SAAD,OAAUnC,UAIpBmC,EACRxC,EAAI4C,QAAQ,MAAQ,UACbJ,EAAQxC,GAGvBwC,EAAQlB,SAAWA,EACnBG,GAAW,GACXuB,QAAQC,IAAIT,SAoCZ,qB,OCvFhBU,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,mBCHjDxH,EAAOC,QAAU,CAAC,OAAS,oBAAoB,IAAM,iBAAiB,KAAO,kBAAkB,KAAO,oB,mBCAtGD,EAAOC,QAAU,CAAC,MAAQ,sB,mBCA1BD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,QAAU,yBAAyB,KAAO,yB","file":"static/js/main.bcdce491.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Partner_label__1Vm9x\"};","import React, { FC, useEffect, useState } from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport { WrappedFormUtils } from 'rc-form'\nimport { TextField } from '@material-ui/core'\nimport FormControl from '@material-ui/core/FormControl'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Radio from '@material-ui/core/Radio'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport cs from './index.module.scss'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport qs from 'qs'\n\nexport interface FormProps {\n    title: string\n    form: WrappedFormUtils\n    address: { id: number; label: string }[]\n}\nconst Form: FC<FormProps> = ({ title, form, address }) => {\n    const {\n        getFieldDecorator,\n        getFieldValue,\n        getFieldError,\n        resetFields\n    } = form\n    const [current, setCurrent] = useState('')\n    useEffect(() => {\n        const search = qs.parse(window.location.search.slice(1))\n        setCurrent(search.get)\n    }, [])\n    const renderCardRules = () => {\n        if (getFieldValue('card') === '0') {\n            return [\n                {\n                    required: true,\n                    message: '请输入您的身份证'\n                },\n\n                {\n                    pattern: /^[1-9]\\d{5}(18|19|20|(3\\d))\\d{2}((0[1-9])|(1[0-2]))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$/,\n                    message: '请输入合法的身份证'\n                }\n            ]\n        }\n        return [\n            {\n                required: true,\n                message: '请输入您的护照/回乡证/台胞证号码'\n            }\n        ]\n    }\n    return (\n        <Card style={{ marginBottom: 10 }}>\n            <CardHeader title={title || '基本信息'} />\n            <CardContent>\n                {getFieldDecorator('name', {\n                    initialValue: '',\n                    rules: [\n                        {\n                            required: true,\n                            message: '请输入您的姓名'\n                        },\n                        {\n                            validator(rule, value: string, callback) {\n                                if (value.length <= 8) {\n                                    return callback()\n                                }\n                                callback('姓名不得超过8个字符')\n                            }\n                        }\n                    ],\n                    validateTrigger: 'onBlur'\n                })(\n                    <TextField\n                        error={!!getFieldError('name')}\n                        helperText={getFieldError('name')}\n                        variant={'outlined'}\n                        size={'small'}\n                        fullWidth\n                        label=\"请填写您的姓名（必填）\"\n                    />\n                )}\n\n                <FormControl fullWidth size={'small'} >\n                    {getFieldDecorator('card', {\n                        initialValue: '0',\n                        trigger: 'onChange'\n                    })(\n                        <RadioGroup\n                            name=\"position\"\n                            row\n                            onChange={() => {\n                                resetFields(['card_detail'])\n                            }}\n                        >\n                            <FormControlLabel\n                                value=\"0\"\n                                control={\n                                    <Radio size={'small'} color=\"primary\" />\n                                }\n                                classes={{\n                                    labelPlacementStart: cs.label\n                                }}\n                                label=\"身份证\"\n                                labelPlacement=\"start\"\n                            />\n                            <FormControlLabel\n                                value=\"1\"\n                                control={\n                                    <Radio size={'small'} color=\"primary\" />\n                                }\n                                label=\"其他\"\n                                labelPlacement=\"start\"\n                            />\n                        </RadioGroup>\n                    )}\n                </FormControl>\n                {getFieldDecorator('card_detail', {\n                    initialValue: '',\n                    rules: renderCardRules(),\n                    validateTrigger: 'onBlur'\n                })(\n                    <TextField\n                        error={!!getFieldError('card_detail')}\n                        helperText={getFieldError('card_detail')}\n                        variant={'outlined'}\n                        size={'small'}\n                        fullWidth\n                        label={\n                            getFieldValue('card') === '0'\n                                ? '填写18位身份证（必填）'\n                                : '填写护照/回乡证/台胞证号码（必填）'\n                        }\n                    />\n                )}\n                <FormControl\n                    fullWidth\n                    size={'small'}\n                    error={!!getFieldError(`type`)}\n                >\n                    {getFieldDecorator('type', {\n                        initialValue: '',\n                        trigger: 'onChange',\n                        rules: [\n                            {\n                                required: true,\n                                message: '请选择出行状态'\n                            }\n                        ],\n                        validateFirst: true\n                    })(\n                        <RadioGroup row>\n                            <FormControlLabel\n                                value=\"0\"\n                                control={\n                                    <Radio size={'small'} color=\"primary\" />\n                                }\n                                classes={{\n                                    labelPlacementStart: cs.label\n                                }}\n                                label=\"进入\"\n                                labelPlacement=\"start\"\n                            />\n                            <FormControlLabel\n                                value=\"1\"\n                                control={\n                                    <Radio size={'small'} color=\"primary\" />\n                                }\n                                label=\"外出\"\n                                labelPlacement=\"start\"\n                            />\n                        </RadioGroup>\n                    )}\n                    <FormHelperText>{getFieldError(`type`)}</FormHelperText>\n                </FormControl>\n                <FormControl\n                    size={'small'}\n                    fullWidth\n                    error={!!getFieldError('address')}\n                >\n                    <InputLabel\n                        id=\"address\"\n                        variant={'outlined'}\n                        style={{ backgroundColor: '#fff' }}\n                    >\n                        地址（必填）\n                    </InputLabel>\n                    {getFieldDecorator('address', {\n                        initialValue: current || '',\n                        rules: [\n                            {\n                                required: true,\n                                message: '请选择你当前的地址'\n                            }\n                        ],\n                        validateTrigger: 'onChange'\n                    })(\n                        <Select labelId=\"address\" variant={'outlined'}>\n                            {address.map(item => (\n                                <MenuItem value={'' + item.id} key={item.id}>\n                                    {item.label}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    )}\n                    <FormHelperText>\n                        {getFieldError('address')}\n                    </FormHelperText>\n                </FormControl>\n                {getFieldDecorator('unit', {\n                    initialValue: '',\n                    rules: [\n                        {\n                            required: true,\n                            message: '请输入单元号及门牌号'\n                        }\n                    ],\n                    validateTrigger: 'onBlur'\n                })(\n                    <TextField\n                        error={!!getFieldError('unit')}\n                        helperText={getFieldError('unit')}\n                        variant={'outlined'}\n                        size={'small'}\n                        fullWidth\n                        label={'单元号及门牌号（必填）'}\n                    />\n                )}\n                {getFieldDecorator('phone', {\n                    initialValue: '',\n                    rules: [\n                        {\n                            required: true,\n                            message: '请输入手机号'\n                        },\n                        {\n                            pattern: /^1[0123456789]\\d{9}$/,\n                            message: '请输入正确格式的手机号'\n                        }\n                    ],\n                    validateTrigger: 'onBlur'\n                })(\n                    <TextField\n                        type={'tel'}\n                        error={!!getFieldError('phone')}\n                        helperText={getFieldError('phone')}\n                        variant={'outlined'}\n                        size={'small'}\n                        fullWidth\n                        label={'手机号（必填）'}\n                    />\n                )}\n                <FormControl\n                    size={'small'}\n                    fullWidth\n                    error={!!getFieldError('transport')}\n                >\n                    <InputLabel\n                        id=\"transport\"\n                        variant={'outlined'}\n                        style={{ backgroundColor: '#fff' }}\n                    >\n                        出行方式（必填）\n                    </InputLabel>\n                    {getFieldDecorator('transport', {\n                        initialValue: '',\n                        rules: [\n                            {\n                                required: true,\n                                message: '请选择出行方式'\n                            }\n                        ],\n                        validateTrigger: 'onChange'\n                    })(\n                        <Select labelId=\"transport\" variant={'outlined'}>\n                            <MenuItem value=\"0\">汽车</MenuItem>\n                            <MenuItem value=\"1\">其他</MenuItem>\n                        </Select>\n                    )}\n                    <FormHelperText>\n                        {getFieldError('transport')}\n                    </FormHelperText>\n                </FormControl>\n                {getFieldValue('transport') === '0' &&\n                    getFieldDecorator('transport_detail', {\n                        initialValue: '',\n                        rules: [\n                            {\n                                required: true,\n                                message: '请输入车牌号'\n                            }\n                        ],\n                        validateTrigger: 'onBlur'\n                    })(\n                        <TextField\n                            error={!!getFieldError('transport_detail')}\n                            helperText={getFieldError('transport_detail')}\n                            variant={'outlined'}\n                            size={'small'}\n                            fullWidth\n                            label={'请输入车牌号（必填）'}\n                        />\n                    )}\n                <FormControl\n                    size={'small'}\n                    fullWidth\n                    error={!!getFieldError('reason')}\n                >\n                    <InputLabel\n                        id=\"reason\"\n                        variant={'outlined'}\n                        style={{ backgroundColor: '#fff' }}\n                    >\n                        外出事由（必填）\n                    </InputLabel>\n                    {getFieldDecorator('reason', {\n                        initialValue: '',\n                        rules: [\n                            {\n                                required: true,\n                                message: '请选择外出事由'\n                            }\n                        ],\n                        validateTrigger: 'onChange'\n                    })(\n                        <Select labelId=\"reason\" variant={'outlined'}>\n                            <MenuItem value=\"0\">采购</MenuItem>\n                            <MenuItem value=\"1\">工作</MenuItem>\n                            <MenuItem value=\"2\">其他</MenuItem>\n                        </Select>\n                    )}\n                    <FormHelperText>{getFieldError('reason')}</FormHelperText>\n                </FormControl>\n                {getFieldValue('reason') === '2' &&\n                    getFieldDecorator('reason_detail', {\n                        initialValue: ''\n                    })(\n                        <TextField\n                            error={!!getFieldError('reason_detail')}\n                            helperText={getFieldError('reason_detail')}\n                            variant={'outlined'}\n                            size={'small'}\n                            fullWidth\n                            label={'请输入具体事由'}\n                        />\n                    )}\n                <FormControl\n                    fullWidth\n                    size={'small'}\n                    error={!!getFieldError(`status`)}\n                >\n                    <FormLabel component=\"legend\">体温是否正常</FormLabel>\n                    {getFieldDecorator('status', {\n                        initialValue: '',\n                        trigger: 'onChange',\n                        rules: [\n                            {\n                                required: true,\n                                message: '请选择体温状态'\n                            },\n                            {\n                                validator(rule, value, callback) {\n                                    if (value === '0') {\n                                        return callback()\n                                    }\n                                    callback('体温异常，无法出行')\n                                }\n                            }\n                        ],\n                        validateFirst: true\n                    })(\n                        <RadioGroup row>\n                            <FormControlLabel\n                                value=\"0\"\n                                control={\n                                    <Radio size={'small'} color=\"primary\" />\n                                }\n                                classes={{\n                                    labelPlacementStart: cs.label\n                                }}\n                                label=\"正常\"\n                                labelPlacement=\"start\"\n                            />\n                            <FormControlLabel\n                                value=\"1\"\n                                control={\n                                    <Radio size={'small'} color=\"primary\" />\n                                }\n                                label=\"异常\"\n                                labelPlacement=\"start\"\n                            />\n                        </RadioGroup>\n                    )}\n                    <FormHelperText>{getFieldError(`status`)}</FormHelperText>\n                </FormControl>\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default Form\n","import React, { FC } from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport { WrappedFormUtils } from 'rc-form'\nimport { TextField } from '@material-ui/core'\nimport FormControl from '@material-ui/core/FormControl'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Radio from '@material-ui/core/Radio'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport cs from './index.module.scss'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport FormHelperText from '@material-ui/core/FormHelperText'\n\nexport interface FormProps {\n    title?: string\n    form: WrappedFormUtils\n    index: number\n    onDelete(index: number): any\n}\nconst Partner: FC<FormProps> = ({ title, form, index, onDelete }) => {\n    const { getFieldDecorator, getFieldError } = form\n    return (\n        <Card style={{ marginBottom: 10 }}>\n            <CardHeader\n                title={title || '同行人员'}\n                action={\n                    <IconButton size={'small'} onClick={() => onDelete(index)}>\n                        <DeleteIcon fontSize={'small'} />\n                    </IconButton>\n                }\n            />\n            <CardContent>\n                {getFieldDecorator(`name:${index}`, {\n                    initialValue: '',\n                    rules: [\n                        {\n                            required: true,\n                            message: '请输入您的姓名'\n                        },\n                        {\n                            validator(rule, value: string, callback) {\n                                if (value.length <= 8) {\n                                    return callback()\n                                }\n                                callback('姓名不得超过8个字符')\n                            }\n                        }\n                    ],\n                    validateTrigger: 'onBlur'\n                })(\n                    <TextField\n                        error={!!getFieldError(`name:${index}`)}\n                        helperText={getFieldError(`name:${index}`)}\n                        variant={'outlined'}\n                        size={'small'}\n                        fullWidth\n                        label=\"请填写您的姓名（必填）\"\n                    />\n                )}\n                {getFieldDecorator(`phone:${index}`, {\n                    initialValue: '',\n                    rules: [\n                        {\n                            required: true,\n                            message: '请输入手机号'\n                        },\n                        {\n                            pattern: /^1[0123456789]\\d{9}$/,\n                            message: '请输入正确格式的手机号'\n                        }\n                    ],\n                    validateTrigger: 'onBlur'\n                })(\n                    <TextField\n                        type={'tel'}\n                        error={!!getFieldError(`phone:${index}`)}\n                        helperText={getFieldError(`phone:${index}`)}\n                        variant={'outlined'}\n                        size={'small'}\n                        fullWidth\n                        label={'手机号（必填）'}\n                    />\n                )}\n                <FormControl\n                    fullWidth\n                    size={'small'}\n                    error={!!getFieldError(`status:${index}`)}\n                >\n                    <FormLabel component=\"legend\">体温是否正常</FormLabel>\n                    {getFieldDecorator(`status:${index}`, {\n                        initialValue: '',\n                        trigger: 'onChange',\n                        rules: [\n                            {\n                                required: true,\n                                message: '请选择体温状态'\n                            },\n                            {\n                                validator(rule, value, callback) {\n                                    if (value === '0') {\n                                        return callback()\n                                    }\n                                    callback('体温异常，无法出行')\n                                }\n                            }\n                        ]\n                    })(\n                        <RadioGroup row>\n                            <FormControlLabel\n                                value=\"0\"\n                                control={\n                                    <Radio size={'small'} color=\"primary\" />\n                                }\n                                classes={{\n                                    labelPlacementStart: cs.label\n                                }}\n                                label=\"正常\"\n                                labelPlacement=\"start\"\n                            />\n                            <FormControlLabel\n                                value=\"1\"\n                                control={\n                                    <Radio size={'small'} color=\"primary\" />\n                                }\n                                label=\"异常\"\n                                labelPlacement=\"start\"\n                            />\n                        </RadioGroup>\n                    )}\n                    <FormHelperText>\n                        {getFieldError(`status:${index}`)}\n                    </FormHelperText>\n                </FormControl>\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default Partner\n","import React, { FC, memo, ReactNode } from 'react'\nimport s from './index.module.scss'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nexport interface IProps {\n    show: boolean\n    text?: string\n    children?: ReactNode\n}\n\nconst Loading: FC<IProps> = ({ show, text }) => {\n    return show ? (\n        <div className={s.mask}>\n            <LinearProgress />\n            <div className={s.loading}>\n                <CircularProgress />\n                {text && <p className={s.info}>{text}</p>}\n            </div>\n        </div>\n    ) : null\n}\n\nexport default memo(Loading)\n","import React, { FC, useEffect, useState } from 'react'\nimport { CssBaseline } from '@material-ui/core'\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive'\nimport cs from './app.module.scss'\nimport Form from './components/Form'\nimport { createForm, FormComponentProps } from 'rc-form'\nimport Partner from './components/Partner'\nimport Button from '@material-ui/core/Button'\nimport Loading from './components/Loading'\n\nconst App: FC<FormComponentProps> = ({ form }) => {\n    const [partners, setPartners] = useState<number[]>([])\n    const { validateFields } = form\n    const [loading, setLoading] = useState(false)\n    const [address, setAddress] = useState<{ id: number; label: string }[]>([])\n    const handleAdd = () => {\n        setPartners(prev => prev.concat(prev[prev.length - 1] + 1 || 0))\n    }\n    useEffect(() => {\n        setTimeout(() => {\n            setAddress([\n                {\n                    id: 12,\n                    label: '呵呵'\n                }\n            ])\n        }, 2000)\n    }, [])\n    const handleRemove = (index: number) => {\n        const ind = partners.findIndex(i => i === index)\n        const temp = partners.slice()\n        temp.splice(ind, 1)\n        setPartners(temp)\n    }\n    const handleSubmit = () => {\n        validateFields((error, payload) => {\n            if (!error) {\n                const keys = Object.keys(payload)\n                let partners: any[] = []\n                keys.forEach(item => {\n                    if (item.indexOf('name:') > -1) {\n                        const index = +item.split(':')[1]\n                        partners.push({\n                            name: payload[item],\n                            phone: payload[`phone:${index}`]\n                        })\n                    }\n                })\n                for (let key in payload) {\n                    if (key.indexOf(':') > -1) {\n                        delete payload[key]\n                    }\n                }\n                payload.partners = partners\n                setLoading(true)\n                console.log(payload)\n            }\n        })\n    }\n    return (\n        <>\n            <Loading show={loading} />\n            <CssBaseline />\n            <header className={cs.header}>\n                <h1>新密市疫情登记表</h1>\n                <div className={cs.tip}>\n                    <NotificationsActiveIcon color={'secondary'} />\n                    <span className={cs.info}>\n                        应疫情防控要求，请新密返程人员进行填报登记。本个人信息不会对外泄露，请如实填写。\n                    </span>\n                </div>\n            </header>\n            <main className={cs.main}>\n                <Form title={'基本信息'} form={form} address={address} />\n                {partners.map(item => (\n                    <Partner\n                        form={form}\n                        key={item}\n                        index={item}\n                        onDelete={handleRemove}\n                    />\n                ))}\n                <Button\n                    variant={'contained'}\n                    color={'primary'}\n                    fullWidth\n                    onClick={handleAdd}\n                    style={{ marginBottom: 4 }}\n                >\n                    新增同行人员\n                </Button>\n                <Button\n                    variant={'contained'}\n                    color={'secondary'}\n                    fullWidth\n                    onClick={handleSubmit}\n                >\n                    提交\n                </Button>\n            </main>\n        </>\n    )\n}\n\nexport default createForm()(App)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\nReactDOM.render(<App />, document.getElementById('root'));\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app_header__2g4Pw\",\"tip\":\"app_tip__3CsLJ\",\"info\":\"app_info__3At5F\",\"main\":\"app_main__1NOZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Form_label__1Y_bT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mask\":\"Loading_mask__2ZTdE\",\"loading\":\"Loading_loading__38WPi\",\"info\":\"Loading_info__2-Mlp\"};"],"sourceRoot":""}